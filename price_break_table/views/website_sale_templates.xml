<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        
        <!-- Template pour le tableau de prix dégressifs sur les pages produit -->
        <template id="website_sale_product_price_break" name="Product Price Break Table" inherit_id="website_sale.product">
            <xpath expr="//div[@id='add_to_cart_wrap']" position="after">
                <t t-set="price_break_data" t-value="product.get_price_break_table_data()"/>
                <t t-if="price_break_data and price_break_data.get('rows') and len(price_break_data['rows']) > 1">
                    <div class="table-responsive mt-3 price-break-table-container">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Quantité</th>
                                    <th>Prix unitaire</th>
                                </tr>
                            </thead>
                            <tbody>
                                <t t-foreach="price_break_data['rows']" t-as="row">
                                    <tr class="price-break-row"
                                        t-att-data-qty="row['min_quantity']"
                                        style="cursor: pointer;">
                                        <td><t t-esc="row['quantity_display']"/></td>
                                        <td><t t-esc="row['price_formatted']"/></td>
                                    </tr>
                                </t>
                            </tbody>
                        </table>
                    </div>

                    <script type="text/javascript">
                        document.addEventListener('DOMContentLoaded', function () {
                            var rows = document.querySelectorAll('.price-break-row');
                            var input = document.querySelector('input[name="add_qty"], #quantity');
                            var lastValue = '';

                            function highlightMatchingRow(qty) {
                                var matched = null;
                                rows.forEach(function(row) {
                                    var rowQty = parseFloat(row.dataset.qty);
                                    if (qty >= rowQty) {
                                        matched = row;
                                    }
                                });

                                rows.forEach(function(r) {
                                    r.classList.remove('price-break-active');
                                });
                                if (matched) {
                                    matched.classList.add('price-break-active');
                                }
                            }

                            function updateHighlight() {
                                if (input &amp;&amp; input.value !== lastValue) {
                                    lastValue = input.value;
                                    var qty = parseFloat(input.value);
                                    if (!isNaN(qty)) {
                                        highlightMatchingRow(qty);
                                    }
                                }
                            }

                            if (input) {
                                // Événement pour la saisie manuelle
                                input.addEventListener('input', updateHighlight);
                                input.addEventListener('change', updateHighlight);
                                
                                // Surveillance continue de la valeur
                                setInterval(updateHighlight, 200);
                                
                                // Événements sur tous les boutons possibles
                                var allButtons = document.querySelectorAll('button, .btn, [onclick*="qty"], .fa-plus, .fa-minus, .btn-plus, .btn-minus');
                                allButtons.forEach(function(btn) {
                                    btn.addEventListener('click', function() {
                                        setTimeout(updateHighlight, 300);
                                    });
                                });
                                
                                // Événements sur les éléments parents
                                if (input.parentNode) {
                                    input.parentNode.addEventListener('click', function(e) {
                                        if (e.target.tagName === 'BUTTON' || e.target.classList.contains('btn') || e.target.classList.contains('fa')) {
                                            setTimeout(updateHighlight, 300);
                                        }
                                    });
                                }
                            }

                            rows.forEach(function (row) {
                                row.addEventListener('click', function () {
                                    var qty = parseFloat(row.dataset.qty);
                                    if (input) {
                                        input.value = qty;
                                        lastValue = qty.toString();
                                        ['input', 'change', 'blur'].forEach(function(ev) {
                                            input.dispatchEvent(new Event(ev, { bubbles: true }));
                                        });
                                    }
                                    highlightMatchingRow(qty);
                                });
                            });
                        });
                    </script>

                    <style>
                        .price-break-table-container {
                            width: 60%;
                            max-width: 400px;
                        }
                        .price-break-row:hover {
                            background-color: #c7eae5;
                        }
                        .price-break-active {
                            background-color: #c7eae5 !important;
                            border: 2px solid #79C8BD !important;
                            font-weight: bold;
                        }
                    </style>
                </t>
            </xpath>
        </template>

    </data>
</odoo>