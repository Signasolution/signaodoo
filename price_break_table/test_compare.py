#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Script de comparaison des trois m√©thodes
Usage: Dans le shell Odoo, ex√©cuter: exec(open('addons/price_break_table/test_compare.py').read())
"""

print("=" * 60)
print("COMPARAISON DES TROIS M√âTHODES")
print("=" * 60)

# R√©cup√©rer l'environnement Odoo
env = env  # Variable globale du shell Odoo

# Test avec le produit ID 2
product_id = 2
print(f"\nüîç Test du produit ID: {product_id}")

try:
    # R√©cup√©rer le produit
    product = env['product.template'].browse(product_id)
    print(f"‚úÖ Produit: {product.name}")
    
    # Test 1: M√©thode principale
    print(f"\nüß™ TEST 1: M√©thode principale (get_price_break_table_js_data)")
    print("-" * 50)
    try:
        result1 = product.get_price_break_table_js_data(1, None, 1)
        print(f"R√©sultat: {len(result1.get('rows', []))} r√®gles")
        if result1.get('rows'):
            for i, row in enumerate(result1['rows']):
                print(f"   {i+1}. {row.get('quantity_display', 'N/A')} ‚Üí {row.get('price_formatted', 'N/A')}")
        else:
            print("   ‚ùå Aucune r√®gle trouv√©e")
    except Exception as e:
        print(f"   ‚ùå Erreur: {e}")
    
    # Test 2: M√©thode debug
    print(f"\nüß™ TEST 2: M√©thode debug (get_price_break_table_js_data_debug)")
    print("-" * 50)
    try:
        result2 = product.get_price_break_table_js_data_debug(1, None, 1)
        print(f"R√©sultat: {len(result2.get('rows', []))} r√®gles")
        if result2.get('rows'):
            for i, row in enumerate(result2['rows']):
                print(f"   {i+1}. {row.get('quantity_display', 'N/A')} ‚Üí {row.get('price_formatted', 'N/A')}")
        else:
            print("   ‚ùå Aucune r√®gle trouv√©e")
    except Exception as e:
        print(f"   ‚ùå Erreur: {e}")
    
    # Test 3: M√©thode test
    print(f"\nüß™ TEST 3: M√©thode test (get_price_break_table_js_data_test)")
    print("-" * 50)
    try:
        result3 = product.get_price_break_table_js_data_test(1, None, 1)
        print(f"R√©sultat: {len(result3.get('rows', []))} r√®gles")
        if result3.get('rows'):
            for i, row in enumerate(result3['rows']):
                print(f"   {i+1}. {row.get('quantity_display', 'N/A')} ‚Üí {row.get('price_formatted', 'N/A')}")
        else:
            print("   ‚ùå Aucune r√®gle trouv√©e")
    except Exception as e:
        print(f"   ‚ùå Erreur: {e}")
    
    # Comparaison
    print(f"\nüìä COMPARAISON:")
    print("-" * 50)
    print(f"   M√©thode principale: {len(result1.get('rows', []))} r√®gles")
    print(f"   M√©thode debug:      {len(result2.get('rows', []))} r√®gles")
    print(f"   M√©thode test:       {len(result3.get('rows', []))} r√®gles")
    
    if len(result1.get('rows', [])) != len(result2.get('rows', [])):
        print(f"\n‚ö†Ô∏è  PROBL√àME D√âTECT√â!")
        print(f"   La m√©thode principale ne trouve pas les m√™mes r√®gles que la m√©thode debug!")
        print(f"   Cela confirme qu'il y a encore un probl√®me dans la m√©thode principale.")
    
except Exception as e:
    print(f"‚ùå Erreur g√©n√©rale: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "=" * 60)
print("FIN DE LA COMPARAISON")
print("=" * 60)
